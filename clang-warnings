Enabled checks:
    clang-analyzer-apiModeling.StdCLibraryFunctions
    clang-analyzer-apiModeling.TrustNonnull
    clang-analyzer-apiModeling.google.GTest
    clang-analyzer-apiModeling.llvm.CastValue
    clang-analyzer-apiModeling.llvm.ReturnValue
    clang-analyzer-core.CallAndMessage
    clang-analyzer-core.DivideZero
    clang-analyzer-core.DynamicTypePropagation
    clang-analyzer-core.NonNullParamChecker
    clang-analyzer-core.NonnilStringConstants
    clang-analyzer-core.NullDereference
    clang-analyzer-core.StackAddrEscapeBase
    clang-analyzer-core.StackAddressEscape
    clang-analyzer-core.UndefinedBinaryOperatorResult
    clang-analyzer-core.VLASize
    clang-analyzer-core.builtin.BuiltinFunctions
    clang-analyzer-core.builtin.NoReturnFunctions
    clang-analyzer-core.uninitialized.ArraySubscript
    clang-analyzer-core.uninitialized.Assign
    clang-analyzer-core.uninitialized.Branch
    clang-analyzer-core.uninitialized.CapturedBlockVariable
    clang-analyzer-core.uninitialized.UndefReturn
    clang-analyzer-cplusplus.InnerPointer
    clang-analyzer-cplusplus.Move
    clang-analyzer-cplusplus.NewDelete
    clang-analyzer-cplusplus.NewDeleteLeaks
    clang-analyzer-cplusplus.PureVirtualCall
    clang-analyzer-cplusplus.SelfAssignment
    clang-analyzer-cplusplus.SmartPtr
    clang-analyzer-cplusplus.VirtualCallModeling
    clang-analyzer-deadcode.DeadStores
    clang-analyzer-fuchsia.HandleChecker
    clang-analyzer-nullability.NullPassedToNonnull
    clang-analyzer-nullability.NullReturnedFromNonnull
    clang-analyzer-nullability.NullabilityBase
    clang-analyzer-nullability.NullableDereferenced
    clang-analyzer-nullability.NullablePassedToNonnull
    clang-analyzer-nullability.NullableReturnedFromNonnull
    clang-analyzer-optin.cplusplus.UninitializedObject
    clang-analyzer-optin.cplusplus.VirtualCall
    clang-analyzer-optin.mpi.MPI-Checker
    clang-analyzer-optin.osx.OSObjectCStyleCast
    clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
    clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker
    clang-analyzer-optin.performance.GCDAntipattern
    clang-analyzer-optin.performance.Padding
    clang-analyzer-optin.portability.UnixAPI
    clang-analyzer-osx.API
    clang-analyzer-osx.MIG
    clang-analyzer-osx.NSOrCFErrorDerefChecker
    clang-analyzer-osx.NumberObjectConversion
    clang-analyzer-osx.OSObjectRetainCount
    clang-analyzer-osx.ObjCProperty
    clang-analyzer-osx.SecKeychainAPI
    clang-analyzer-osx.cocoa.AtSync
    clang-analyzer-osx.cocoa.AutoreleaseWrite
    clang-analyzer-osx.cocoa.ClassRelease
    clang-analyzer-osx.cocoa.Dealloc
    clang-analyzer-osx.cocoa.IncompatibleMethodTypes
    clang-analyzer-osx.cocoa.Loops
    clang-analyzer-osx.cocoa.MissingSuperCall
    clang-analyzer-osx.cocoa.NSAutoreleasePool
    clang-analyzer-osx.cocoa.NSError
    clang-analyzer-osx.cocoa.NilArg
    clang-analyzer-osx.cocoa.NonNilReturnValue
    clang-analyzer-osx.cocoa.ObjCGenerics
    clang-analyzer-osx.cocoa.RetainCount
    clang-analyzer-osx.cocoa.RetainCountBase
    clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak
    clang-analyzer-osx.cocoa.SelfInit
    clang-analyzer-osx.cocoa.SuperDealloc
    clang-analyzer-osx.cocoa.UnusedIvars
    clang-analyzer-osx.cocoa.VariadicMethodTypes
    clang-analyzer-osx.coreFoundation.CFError
    clang-analyzer-osx.coreFoundation.CFNumber
    clang-analyzer-osx.coreFoundation.CFRetainRelease
    clang-analyzer-osx.coreFoundation.containers.OutOfBounds
    clang-analyzer-osx.coreFoundation.containers.PointerSizedValues
    clang-analyzer-security.FloatLoopCounter
    clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling
    clang-analyzer-security.insecureAPI.SecuritySyntaxChecker
    clang-analyzer-security.insecureAPI.UncheckedReturn
    clang-analyzer-security.insecureAPI.bcmp
    clang-analyzer-security.insecureAPI.bcopy
    clang-analyzer-security.insecureAPI.bzero
    clang-analyzer-security.insecureAPI.decodeValueOfObjCType
    clang-analyzer-security.insecureAPI.getpw
    clang-analyzer-security.insecureAPI.gets
    clang-analyzer-security.insecureAPI.mkstemp
    clang-analyzer-security.insecureAPI.mktemp
    clang-analyzer-security.insecureAPI.rand
    clang-analyzer-security.insecureAPI.strcpy
    clang-analyzer-security.insecureAPI.vfork
    clang-analyzer-unix.API
    clang-analyzer-unix.DynamicMemoryModeling
    clang-analyzer-unix.Malloc
    clang-analyzer-unix.MallocSizeof
    clang-analyzer-unix.MismatchedDeallocator
    clang-analyzer-unix.Vfork
    clang-analyzer-unix.cstring.BadSizeArg
    clang-analyzer-unix.cstring.CStringModeling
    clang-analyzer-unix.cstring.NullArg
    clang-analyzer-valist.CopyToSelf
    clang-analyzer-valist.Uninitialized
    clang-analyzer-valist.Unterminated
    clang-analyzer-valist.ValistBase
    misc-unused-alias-decls
    misc-unused-parameters
    misc-unused-using-decls
    modernize-avoid-bind
    modernize-avoid-c-arrays
    modernize-concat-nested-namespaces
    modernize-deprecated-headers
    modernize-deprecated-ios-base-aliases
    modernize-loop-convert
    modernize-make-shared
    modernize-make-unique
    modernize-pass-by-value
    modernize-raw-string-literal
    modernize-redundant-void-arg
    modernize-replace-auto-ptr
    modernize-replace-random-shuffle
    modernize-return-braced-init-list
    modernize-shrink-to-fit
    modernize-unary-static-assert
    modernize-use-auto
    modernize-use-bool-literals
    modernize-use-default-member-init
    modernize-use-emplace
    modernize-use-equals-default
    modernize-use-equals-delete
    modernize-use-nodiscard
    modernize-use-noexcept
    modernize-use-nullptr
    modernize-use-transparent-functors
    modernize-use-uncaught-exceptions
    modernize-use-using

clang-apply-replacements version 10.0.0
clang-tidy -export-fixes /tmp/tmpcn8pgs3q/tmpgjb2_2gb.yaml -p=miranda/build /home/sabbir/sst-elements-org/miranda/generators/singlestream.cc
/home/sabbir/sst-elements-org/miranda/generators/singlestream.cc:31:8: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
        const uint32_t verbose = params.find<uint32_t>("verbose", 0);
              ^~~~~~~~
              auto
clang-tidy -export-fixes /tmp/tmpcn8pgs3q/tmpqkz73e2v.yaml -p=miranda/build /home/sabbir/sst-elements-org/miranda/generators/gupsgen.cc
/home/sabbir/sst-elements-org/miranda/generators/gupsgen.cc:30:11: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
    const uint32_t verbose = params.find<uint32_t>("verbose", 0);
          ^~~~~~~~
          auto
/home/sabbir/sst-elements-org/miranda/generators/gupsgen.cc:67:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
    MemoryOpRequest* readAddr = new MemoryOpRequest(addr, reqLength, READ);
    ^~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/miranda/generators/gupsgen.cc:68:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
    MemoryOpRequest* writeAddr = new MemoryOpRequest(addr, reqLength, WRITE);
    ^~~~~~~~~~~~~~~
    auto
clang-tidy -export-fixes /tmp/tmpcn8pgs3q/tmpbu2wv09r.yaml -p=miranda/build /home/sabbir/sst-elements-org/miranda/generators/streambench.cc
/home/sabbir/sst-elements-org/miranda/generators/streambench.cc:30:8: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
        const uint32_t verbose = params.find<uint32_t>("verbose", 0);
              ^~~~~~~~
              auto
/home/sabbir/sst-elements-org/miranda/generators/streambench.cc:72:17: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                MemoryOpRequest* read_b  = new MemoryOpRequest(start_b + (i * reqLength), reqLength, READ);
                ^~~~~~~~~~~~~~~
                auto
/home/sabbir/sst-elements-org/miranda/generators/streambench.cc:73:17: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                MemoryOpRequest* read_c  = new MemoryOpRequest(start_c + (i * reqLength), reqLength, READ);
                ^~~~~~~~~~~~~~~
                auto
/home/sabbir/sst-elements-org/miranda/generators/streambench.cc:74:17: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                MemoryOpRequest* write_a = new MemoryOpRequest(start_a + (i * reqLength), reqLength, WRITE);
                ^~~~~~~~~~~~~~~
                auto
clang-tidy -export-fixes /tmp/tmpcn8pgs3q/tmpwrrapo3u.yaml -p=miranda/build /home/sabbir/sst-elements-org/miranda/generators/randomgen.cc
/home/sabbir/sst-elements-org/miranda/generators/randomgen.cc:31:8: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
        const uint32_t verbose = params.find<uint32_t>("verbose", 0);
              ^~~~~~~~
              auto
clang-tidy -export-fixes /tmp/tmpcn8pgs3q/tmpm6fmmjn1.yaml -p=miranda/build /home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:31:8: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
        const uint32_t verbose = params.find<uint32_t>("verbose", 0);
              ^~~~~~~~
              auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:67:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_a = new MemoryOpRequest(datawidth * convertPositionToIndex(curX - 1, curY - 1, currentZ - 1), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:68:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_b = new MemoryOpRequest(datawidth * convertPositionToIndex(curX,     curY - 1, currentZ - 1), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:69:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_c = new MemoryOpRequest(datawidth * convertPositionToIndex(curX + 1, curY - 1, currentZ - 1), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:71:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_d = new MemoryOpRequest(datawidth * convertPositionToIndex(curX - 1, curY    , currentZ - 1), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:72:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_e = new MemoryOpRequest(datawidth * convertPositionToIndex(curX,     curY    , currentZ - 1), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:73:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_f = new MemoryOpRequest(datawidth * convertPositionToIndex(curX + 1, curY    , currentZ - 1), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:75:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_g = new MemoryOpRequest(datawidth * convertPositionToIndex(curX - 1, curY + 1, currentZ - 1), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:76:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_h = new MemoryOpRequest(datawidth * convertPositionToIndex(curX,     curY + 1, currentZ - 1), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:77:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_i = new MemoryOpRequest(datawidth * convertPositionToIndex(curX + 1, curY + 1, currentZ - 1), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:79:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_j = new MemoryOpRequest(datawidth * convertPositionToIndex(curX - 1, curY - 1, currentZ    ), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:80:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_k = new MemoryOpRequest(datawidth * convertPositionToIndex(curX,     curY - 1, currentZ    ), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:81:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_l = new MemoryOpRequest(datawidth * convertPositionToIndex(curX + 1, curY - 1, currentZ    ), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:83:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_m = new MemoryOpRequest(datawidth * convertPositionToIndex(curX - 1, curY    , currentZ    ), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:84:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_n = new MemoryOpRequest(datawidth * convertPositionToIndex(curX,     curY    , currentZ    ), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:85:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_o = new MemoryOpRequest(datawidth * convertPositionToIndex(curX + 1, curY    , currentZ    ), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:87:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_p = new MemoryOpRequest(datawidth * convertPositionToIndex(curX - 1, curY + 1, currentZ    ), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:88:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_q = new MemoryOpRequest(datawidth * convertPositionToIndex(curX,     curY + 1, currentZ    ), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:89:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_r = new MemoryOpRequest(datawidth * convertPositionToIndex(curX + 1, curY + 1, currentZ    ), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:91:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_s = new MemoryOpRequest(datawidth * convertPositionToIndex(curX - 1, curY - 1, currentZ + 1), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:92:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_t = new MemoryOpRequest(datawidth * convertPositionToIndex(curX,     curY - 1, currentZ + 1), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:93:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_u = new MemoryOpRequest(datawidth * convertPositionToIndex(curX + 1, curY - 1, currentZ + 1), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:95:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_v = new MemoryOpRequest(datawidth * convertPositionToIndex(curX - 1, curY    , currentZ + 1), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:96:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_w = new MemoryOpRequest(datawidth * convertPositionToIndex(curX,     curY    , currentZ + 1), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:97:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_x = new MemoryOpRequest(datawidth * convertPositionToIndex(curX + 1, curY    , currentZ + 1), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:99:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_y = new MemoryOpRequest(datawidth * convertPositionToIndex(curX - 1, curY + 1, currentZ + 1), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:100:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_z = new MemoryOpRequest(datawidth * convertPositionToIndex(curX,     curY + 1, currentZ + 1), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:101:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* read_zz = new MemoryOpRequest(datawidth * convertPositionToIndex(curX + 1, curY + 1, currentZ + 1), datawidth, READ);
                                ^~~~~~~~~~~~~~~
                                auto
/home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc:104:33: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                                MemoryOpRequest* write_a = new MemoryOpRequest( (nX * nY * nZ * datawidth) +
                                ^~~~~~~~~~~~~~~
                                auto
clang-tidy -export-fixes /tmp/tmpcn8pgs3q/tmp8d6f138g.yaml -p=miranda/build /home/sabbir/sst-elements-org/miranda/generators/revsinglestream.cc
/home/sabbir/sst-elements-org/miranda/generators/revsinglestream.cc:31:8: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
        const uint32_t verbose = params.find<uint32_t>("verbose", 0);
              ^~~~~~~~
              auto
clang-tidy -export-fixes /tmp/tmpcn8pgs3q/tmpjfcy51dt.yaml -p=miranda/build /home/sabbir/sst-elements-org/miranda/generators/streambench_customcmd.cc
/home/sabbir/sst-elements-org/miranda/generators/streambench_customcmd.cc:31:8: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
        const uint32_t verbose = params.find<uint32_t>("verbose", 0);
              ^~~~~~~~
              auto
clang-tidy -export-fixes /tmp/tmpcn8pgs3q/tmpkmlycc03.yaml -p=miranda/build /home/sabbir/sst-elements-org/miranda/mirandaIncGen.cc
clang-tidy -export-fixes /tmp/tmpcn8pgs3q/tmp6gtkxemr.yaml -p=miranda/build /home/sabbir/sst-elements-org/miranda/mirandaCPU.cc
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:31:25: warning: use nullptr [modernize-use-nullptr]
        Component(id), srcLink(NULL), reqGen(NULL) {
                               ^~~~
                               nullptr
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:31:39: warning: use nullptr [modernize-use-nullptr]
        Component(id), srcLink(NULL), reqGen(NULL) {
                                             ^~~~
                                             nullptr
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:57:20: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]
        cache_link = loadUserSubComponent<Interfaces::SimpleMem>("memory", ComponentInfo::SHARE_NONE, timeConverter, new SimpleMem::Handler<RequestGenCPU>(this, &RequestGenCPU::handleEvent) );
                   ^
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:57:118: note: Memory is allocated
        cache_link = loadUserSubComponent<Interfaces::SimpleMem>("memory", ComponentInfo::SHARE_NONE, timeConverter, new SimpleMem::Handler<RequestGenCPU>(this, &RequestGenCPU::handleEvent) );
                                                                                                                     ^
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:57:20: note: Potential memory leak
        cache_link = loadUserSubComponent<Interfaces::SimpleMem>("memory", ComponentInfo::SHARE_NONE, timeConverter, new SimpleMem::Handler<RequestGenCPU>(this, &RequestGenCPU::handleEvent) );
                   ^
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:64:17: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]
            cache_link = loadAnonymousSubComponent<Interfaces::SimpleMem>(interfaceName, "memory", 0, ComponentInfo::SHARE_PORTS | ComponentInfo::INSERT_STATS,
                       ^
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:58:14: note: Field 'cache_link' is null
        if (!cache_link) {
             ^
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:58:9: note: Taking true branch
        if (!cache_link) {
        ^
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:65:53: note: Memory is allocated
                    interfaceParams, timeConverter, new SimpleMem::Handler<RequestGenCPU>(this, &RequestGenCPU::handleEvent));
                                                    ^
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:64:17: note: Potential memory leak
            cache_link = loadAnonymousSubComponent<Interfaces::SimpleMem>(interfaceName, "memory", 0, ComponentInfo::SHARE_PORTS | ComponentInfo::INSERT_STATS,
                       ^
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:76:8: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
        const uint64_t pageSize  = params.find<uint64_t>("pagesize", 4096);
              ^~~~~~~~
              auto
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:77:8: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
        const uint64_t pageCount = params.find<uint64_t>("pagecount", 4194304);
              ^~~~~~~~
              auto
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:119:6: warning: use nullptr [modernize-use-nullptr]
                if(NULL == reqGen) {
                   ^~~~
                   nullptr
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:132:8: warning: use nullptr [modernize-use-nullptr]
                if ( NULL == srcLink ) {
                     ^~~~
                     nullptr
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:187:2: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
        MirandaReqEvent* event = static_cast<MirandaReqEvent*>(ev);
        ^~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:213:5: warning: use nullptr [modernize-use-nullptr]
        if(NULL == reqGen) {
           ^~~~
           nullptr
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:223:2: warning: use auto when declaring iterators [modernize-use-auto]
        std::map<SimpleMem::Request::id_t, CPURequest*>::iterator reqFind = requestsInFlight.find(reqID);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:307:13: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
            CustomOpRequest * creq = static_cast<CustomOpRequest*>(req);
            ^~~~~~~~~~~~~~~
            auto
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:327:9: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        CPURequest* newCPUReq = new CPURequest(req->getRequestID());
        ^~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:350:13: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
            CustomOpRequest* creq = static_cast<CustomOpRequest*>(req);
            ^~~~~~~~~~~~~~~
            auto
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:365:9: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        CPURequest* newCPUReq = new CPURequest(req->getRequestID());
        ^~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:379:44: warning: parameter 'cycle' is unused [misc-unused-parameters]
bool RequestGenCPU::clockTick(SST::Cycle_t cycle) {
                                           ^~~~~
                                            /*cycle*/
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:399:22: warning: use nullptr [modernize-use-nullptr]
            reqGen = NULL;
                     ^~~~
                     nullptr
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:401:18: warning: use nullptr [modernize-use-nullptr]
            if ( NULL == srcLink ) {
                 ^~~~
                 nullptr
/home/sabbir/sst-elements-org/miranda/mirandaCPU.cc:405:21: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                    MirandaRspEvent* event = new MirandaRspEvent;
                    ^~~~~~~~~~~~~~~
                    auto
Applying fixes ...
Enabled checks:
    modernize-use-override

clang-apply-replacements version 10.0.0
clang-tidy -checks=-*,modernize-use-override -export-fixes /tmp/tmpvqjv6497/tmpay6d0hp0.yaml -p=miranda/build /home/sabbir/sst-elements-org/miranda/generators/stencil3dbench.cc
clang-tidy -checks=-*,modernize-use-override -export-fixes /tmp/tmpvqjv6497/tmpfcvfk80c.yaml -p=miranda/build /home/sabbir/sst-elements-org/miranda/generators/gupsgen.cc
clang-tidy -checks=-*,modernize-use-override -export-fixes /tmp/tmpvqjv6497/tmp3zks2_g5.yaml -p=miranda/build /home/sabbir/sst-elements-org/miranda/generators/singlestream.cc
clang-tidy -checks=-*,modernize-use-override -export-fixes /tmp/tmpvqjv6497/tmp2h9nkjf_.yaml -p=miranda/build /home/sabbir/sst-elements-org/miranda/generators/streambench.cc
clang-tidy -checks=-*,modernize-use-override -export-fixes /tmp/tmpvqjv6497/tmpmjkvhx09.yaml -p=miranda/build /home/sabbir/sst-elements-org/miranda/generators/streambench_customcmd.cc
clang-tidy -checks=-*,modernize-use-override -export-fixes /tmp/tmpvqjv6497/tmpsnx5uim0.yaml -p=miranda/build /home/sabbir/sst-elements-org/miranda/generators/randomgen.cc
clang-tidy -checks=-*,modernize-use-override -export-fixes /tmp/tmpvqjv6497/tmpudf9kz0_.yaml -p=miranda/build /home/sabbir/sst-elements-org/miranda/generators/revsinglestream.cc
clang-tidy -checks=-*,modernize-use-override -export-fixes /tmp/tmpvqjv6497/tmpzp08qt2a.yaml -p=miranda/build /home/sabbir/sst-elements-org/miranda/mirandaCPU.cc
clang-tidy -checks=-*,modernize-use-override -export-fixes /tmp/tmpvqjv6497/tmpzm1dw1ii.yaml -p=miranda/build /home/sabbir/sst-elements-org/miranda/mirandaIncGen.cc
Applying fixes ...
